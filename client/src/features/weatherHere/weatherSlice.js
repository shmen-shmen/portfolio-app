import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import { fetchQuote } from "./API";

const initialState = {
	displayName: "The Weather Here",
	display: true,
	isLoading: false,
	weather: {},
	coordinates: {
		lat: 0,
		lon: 0,
	},
	date,
};

export const getNewQuote = createAsyncThunk(
	"randomQuotes/fetchQuote",
	async (category) => {
		try {
			const response = await fetchQuote(category);
			return response;
		} catch (error) {
			console.error(error);
		}
	}
);

export const weatherHereSlice = createSlice({
	name: "weatherHere",
	initialState,
	reducers: {},
	// The `extraReducers` field lets the slice handle actions defined elsewhere,
	// including actions generated by createAsyncThunk or in other slices.
	extraReducers: (builder) => {
		builder
			.addCase(getNewQuote.pending, (state) => {
				state.isLoading = true;
			})
			.addCase(getNewQuote.fulfilled, (state, action) => {
				state.isLoading = false;
				state.quote = action.payload;
			})
			.addCase(getNewQuote.rejected, (state) => {
				state.quote = {
					author: "shmin",
					quote: "for some reason something went wrong somewhere ðŸ¥²",
				};
			});
	},
});

export const { selectCategory } = weatherHereSlice.actions;

export default weatherHereSlice.reducer;
